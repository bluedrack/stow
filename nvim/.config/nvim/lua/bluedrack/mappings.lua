vim.g.mapleader = ' '
local opts = { noremap=true, silent=true }
vim.keymap.set("v", "K", ":m '<-2<CR>gv=gv")
vim.keymap.set("v", "J", ":m '>+1<CR>gv=gv")
vim.keymap.set('n', '<c-j>', '<c-w>j')
vim.keymap.set('n', '<c-k>', '<c-w>k')
vim.keymap.set('n', '<c-h>', '<c-w>h')
vim.keymap.set('n', '<c-l>', '<c-w>l')
vim.keymap.set('t', '<c-n>', '<C-\\><C-n>')
vim.keymap.set('v', '<', '<gv', {noremap = true, silent = true})
vim.keymap.set('v', '>', '>gv', {noremap = true, silent = true})
vim.keymap.set('n', '<TAB>', ':bnext<CR>', {noremap = true, silent = true})
vim.keymap.set('n', '<S-TAB>', ':bprevious<CR>', {noremap = true, silent = true})
vim.keymap.set('n', '<c-p>', ':Telescope find_files<CR>', {noremap = true, silent = true})
vim.keymap.set('n', '<leader>gs', ':Git<CR>', {noremap = true, silent = true})
vim.keymap.set('n', '<leader>gc', ':Git commit<CR>', {noremap = true, silent = true})
vim.keymap.set('n', '<leader>gP', ':Git pull<CR>', {noremap = true, silent = true})
vim.keymap.set('n', '<leader>gp', ':Git push<CR>', {noremap = true, silent = true})
vim.keymap.set('n', '<leader>gvs', ':Gvdiffsplit!<CR>', {noremap = true, silent = true})
vim.keymap.set('n', '<leader>gh', ':diffget \\2<CR>', {noremap = true, silent = true})
vim.keymap.set('n', '<leader>gl', ':diffget \\3<CR>', {noremap = true, silent = true})
vim.keymap.set('n', '<leader>v', ':vsplit<CR>', {noremap = true, silent = true})
vim.keymap.set('n', '<leader>h', ':split<CR>', {noremap = true, silent = true})
vim.keymap.set('n', '<leader>t', ':vsplit<CR>:terminal<CR>', {noremap = true, silent = true})
vim.keymap.set('n', '<leader>T', ':terminal<CR>', {noremap = true, silent = true})
vim.keymap.set('n', '<leader>bd', ':Bdelete!<CR>', {noremap = true, silent = true})
vim.keymap.set('t', '<esc>', '<C-\\><C-n>', {noremap = true, silent = true} )
vim.keymap.set('n', 'gD', '<cmd>lua vim.lsp.buf.declaration()<CR>', opts)
vim.keymap.set('n', 'gd', '<cmd>lua vim.lsp.buf.definition()<CR>', opts)
vim.keymap.set('n', 'K', '<cmd>lua vim.lsp.buf.hover()<CR>', opts)
vim.keymap.set('n', 'gi', '<cmd>lua vim.lsp.buf.implementation()<CR>', opts)
vim.keymap.set('n', '<C-k>', '<cmd>lua vim.lsp.buf.signature_help()<CR>', opts)
vim.keymap.set('n', '<space>wa', '<cmd>lua vim.lsp.buf.add_workspace_folder()<CR>', opts)
vim.keymap.set('n', '<space>wr', '<cmd>lua vim.lsp.buf.remove_workspace_folder()<CR>', opts)
vim.keymap.set('n', '<space>wl', '<cmd>lua print(vim.inspect(vim.lsp.buf.list_workspace_folders()))<CR>', opts)
vim.keymap.set('n', '<space>D', '<cmd>lua vim.lsp.buf.type_definition()<CR>', opts)
vim.keymap.set('n', '<space>rn', '<cmd>lua vim.lsp.buf.rename()<CR>', opts)
vim.keymap.set('n', '<space>ca', '<cmd>lua vim.lsp.buf.code_action()<CR>', opts)
vim.keymap.set('n', 'gr', '<cmd>lua vim.lsp.buf.references()<CR>', opts)
vim.keymap.set('n', '<space>e', '<cmd>lua vim.lsp.diagnostic.show_line_diagnostics()<CR>', opts)
vim.keymap.set('n', '[d', '<cmd>lua vim.lsp.diagnostic.goto_prev()<CR>', opts)
vim.keymap.set('n', ']d', '<cmd>lua vim.lsp.diagnostic.goto_next()<CR>', opts)
vim.keymap.set('n', '<space>q', '<cmd>lua vim.lsp.diagnostic.set_loclist()<CR>', opts)
vim.keymap.set('n', '<space>f', '<cmd>lua vim.lsp.buf.formatting()<CR>', opts)
vim.keymap.set('n', '<space>c', ':w<CR>:terminal<CR>igcc %:t -o %:r && ./%:r<CR>', opts)
